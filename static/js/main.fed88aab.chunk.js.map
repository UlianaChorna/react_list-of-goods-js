{"version":3,"sources":["component/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SORT_FIELD","App","useState","sortField","setSortField","reverse","setReverse","isVisibleResetButton","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"iPAceA,MAZf,YAA+B,IAAVC,EAAS,EAATA,MACnB,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCAnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEWC,EACD,WADCA,EAEH,SA0BH,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAuBJ,GAAaE,EAEpCG,EA7BR,SAA0BZ,EAA1B,GAA0D,IAAvBO,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCI,EAAa,YAAOb,GAmB1B,OAjBIO,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAcJ,UAGTI,EAScM,CACnBhB,EACA,CAAEI,YAAWE,YAGf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAcH,IAJhC,iCASA,wBACEiB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAcH,IAJhC,4BASA,wBACEiB,QAAS,kBAAMX,GAAYD,IAC3Ba,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAad,IAJnB,qBASCE,GACC,wBACEU,QAAS,WACPb,EAAa,IACbE,GAAW,IAEbY,KAAK,SACLF,UAAU,4BANZ,sBAYJ,6BACE,cAAC,EAAD,CAAWpB,MAAOY,UClG1BY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fed88aab.chunk.js","sourcesContent":["import React from 'react';\n\nfunction GoodsList({ goods }) {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default GoodsList;\n","import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport GoodsList from './component/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nexport const SORT_FIELD = {\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n};\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD.ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const isVisibleResetButton = sortField || reverse;\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD.ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD.LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverse })}\n        >\n          Reverse\n        </button>\n\n        {isVisibleResetButton && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <GoodsList goods={visibleGoods} />\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}